Homework 1 

1) --rm
2) 0.42.0

3) 
SELECT COUNT(*) 
FROM green_taxi_data
WHERE 
    DATE(lpep_pickup_datetime) = '2019-09-18' AND
    DATE(lpep_dropoff_datetime) = '2019-09-18';

Answer:-  15612

4)
SELECT DATE(lpep_pickup_datetime) AS pickup_day, MAX(trip_distance) AS largest_trip_distance FROM green_taxi_data GROUP BY pickup_day;

Answer:- 2019-09-26

5)
 SELECT 
       tz."Borough",
       SUM(gtd.total_amount) AS total_amount_sum
   FROM 
       green_taxi_data gtd
   JOIN 
       taxi_zone_data tz ON gtd."PULocationID" = tz."LocationID"
   WHERE 
       DATE(gtd.lpep_pickup_datetime) = '2019-09-18' AND
       tz."Borough" != 'Unknown'
   GROUP BY tz."Borough"
   HAVING SUM(gtd.total_amount) > 50000
   ORDER BY total_amount_sum DESC
   LIMIT 3;

Answer:- "Brooklyn" "Manhattan" "Queens"

6)
SELECT 
    tz_dropoff."Zone" AS dropoff_zone
FROM 
    green_taxi_data AS gt
JOIN 
    taxi_zone_data AS tz_pickup ON gt."PULocationID" = tz_pickup."LocationID"
JOIN 
    taxi_zone_data AS tz_dropoff ON gt."DOLocationID" = tz_dropoff."LocationID"
WHERE 
    tz_pickup."Zone" = 'Astoria' AND
    DATE(gt."lpep_pickup_datetime") >= '2019-09-01' AND
    DATE(gt."lpep_pickup_datetime") <= '2019-09-30'
ORDER BY gt."tip_amount" DESC
LIMIT 1;

Answer :- JFK Airport

Question 7) 
@Sriramc27 âžœ ~/terrademo $ terraform apply

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_bigquery_dataset.demo_dataset will be created
  + resource "google_bigquery_dataset" "demo_dataset" {
      + creation_time              = (known after apply)
      + dataset_id                 = "demo_dataset1"
      + delete_contents_on_destroy = false
      + etag                       = (known after apply)
      + id                         = (known after apply)
      + labels                     = (known after apply)
      + last_modified_time         = (known after apply)
      + location                   = "US"
      + project                    = (known after apply)
      + self_link                  = (known after apply)
    }

  # google_storage_bucket.demo-bucket will be created
  + resource "google_storage_bucket" "demo-bucket" {
      + force_destroy               = true
      + id                          = (known after apply)
      + location                    = "US"
      + name                        = "custom-temple-411521-terra-bucket"
      + project                     = (known after apply)
      + public_access_prevention    = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + uniform_bucket_level_access = (known after apply)
      + url                         = (known after apply)

      + lifecycle_rule {
          + action {
              + type = "AbortIncompleteMultipartUpload"
            }
          + condition {
              + age                   = 1
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

google_bigquery_dataset.demo_dataset: Creating...
google_storage_bucket.demo-bucket: Creating...
google_bigquery_dataset.demo_dataset: Creation complete after 1s [id=projects/custom-temple-411521/datasets/demo_dataset1]
google_storage_bucket.demo-bucket: Creation complete after 1s [id=custom-temple-411521-terra-bucket]
